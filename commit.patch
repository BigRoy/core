From 8a1584e009d683de23051725cb588bbf3fe54332 Mon Sep 17 00:00:00 2001
From: mottosso <konstruktion@gmail.com>
Date: Tue, 13 Sep 2016 18:11:05 +0100
Subject: [PATCH] Refactor parts of plug-ins into Python package

---
 pyblish_starter/__init__.py                  |   10 ++++++
 pyblish_starter/maya/__init__.py             |    6 +++
 pyblish_starter/maya/cache.py                |   21 ++++++++++++
 pyblish_starter/pipeline.py                  |   11 ++++++
 pyblish_starter/plugins/collect_instances.py |    7 ++++
 pyblish_starter/plugins/extract_animation.py |   44 +++++++++----------------
 pyblish_starter/plugins/extract_model.py     |   12 +++---
 pyblish_starter/plugins/extract_rig.py       |   11 +++---
 pyblish_starter/plugins/integrate_asset.py   |    7 ++++
 9 files changed, 90 insertions(+), 39 deletions(-)
 create mode 100644 pyblish_starter/__init__.py
 create mode 100644 pyblish_starter/maya/__init__.py
 create mode 100644 pyblish_starter/maya/cache.py
 create mode 100644 pyblish_starter/pipeline.py

diff --git a/pyblish_starter/__init__.py b/pyblish_starter/__init__.py
new file mode 100644
index 0000000..dbe5468
--- /dev/null
+++ b/pyblish_starter/__init__.py
@@ -0,0 +1,10 @@
+
+from .pipeline import (
+    time,
+    private_dir,
+)
+
+__all__ = [
+    "time",
+    "private_dir",
+]
diff --git a/pyblish_starter/maya/__init__.py b/pyblish_starter/maya/__init__.py
new file mode 100644
index 0000000..85ddd3c
--- /dev/null
+++ b/pyblish_starter/maya/__init__.py
@@ -0,0 +1,6 @@
+from .cache import export_alembic
+
+
+__all__ = [
+    "export_alembic"
+]
diff --git a/pyblish_starter/maya/cache.py b/pyblish_starter/maya/cache.py
new file mode 100644
index 0000000..17e01c9
--- /dev/null
+++ b/pyblish_starter/maya/cache.py
@@ -0,0 +1,21 @@
+from maya import mel
+
+
+def export_alembic(nodes, file, frame_range=(1, 100), uv_write=True):
+    options = [
+        ("file", file),
+        ("frameRange", "%s %s" % frame_range),
+    ] + [("root", mesh) for mesh in nodes]
+
+    if uv_write:
+        options.append(("uvWrite", ""))
+
+    # Generate MEL command
+    mel_args = list()
+    for key, value in options:
+        mel_args.append("-{0} {1}".format(key, value))
+
+    mel_args_string = " ".join(mel_args)
+    mel_cmd = "AbcExport -j \"{0}\"".format(mel_args_string)
+
+    return mel.eval(mel_cmd)
diff --git a/pyblish_starter/pipeline.py b/pyblish_starter/pipeline.py
new file mode 100644
index 0000000..1f32e8c
--- /dev/null
+++ b/pyblish_starter/pipeline.py
@@ -0,0 +1,11 @@
+import os
+import datetime
+
+
+def time():
+    return datetime.datetime.now().strftime("%Y-%m-%dT%H-%M-%SZ")
+
+
+def format_private_dir(root, name):
+    dirname = os.path.join(root, "private", time(), name)
+    return dirname
diff --git a/pyblish_starter/plugins/collect_instances.py b/pyblish_starter/plugins/collect_instances.py
index a7a9c6a..47c103d 100644
--- a/pyblish_starter/plugins/collect_instances.py
+++ b/pyblish_starter/plugins/collect_instances.py
@@ -26,6 +26,13 @@ class CollectStarterInstances(api.ContextPlugin):
                 - Unmanaged history, it is up to the TD to ensure
                     history is up to par.
 
+    Limitations:
+        - Does not take into account nodes connected to those
+            within an objectSet. Extractors are assumed to export
+            with history preserved, but this limits what they will
+            be able to achieve and the amount of data available
+            to validators.
+
     """
 
     label = "Collect instances"
diff --git a/pyblish_starter/plugins/extract_animation.py b/pyblish_starter/plugins/extract_animation.py
index 49f3039..1f96fe9 100644
--- a/pyblish_starter/plugins/extract_animation.py
+++ b/pyblish_starter/plugins/extract_animation.py
@@ -1,8 +1,5 @@
-import os
-import datetime
-
-from maya import cmds, mel
 from pyblish import api
+import pyblish_starter as starter
 
 
 class ExtractStarterAnimation(api.InstancePlugin):
@@ -22,40 +19,31 @@ class ExtractStarterAnimation(api.InstancePlugin):
     families = ["starter.animation"]
 
     def process(self, instance):
+        import os
+        from maya import cmds
+        from pyblish_starter.maya import export_alembic
+
         self.log.debug("Loading plug-in..")
         cmds.loadPlugin("AbcExport.mll", quiet=True)
 
-        self.log.info("Extracting Alembic..")
-        root = instance.context.data["workspaceDir"]
-        time = datetime.datetime.now().strftime("%Y-%m-%dT%H-%M-%SZ")
-        dirname = os.path.join(root, "private", time, str(instance))
-        filename = "%s.abc" % instance
+        self.log.info("Extracting animation..")
+        dirname = starter.format_private_dir(
+            root=instance.context.data["workspaceDir"],
+            name=instance.data["name"])
 
         try:
             os.makedirs(dirname)
         except OSError:
             pass
 
-        options = {
-            "file": os.path.join(dirname, filename).replace("\\", "/"),
-            "frameRange": "{startFrame} {endFrame}".format(
-                startFrame=cmds.playbackOptions(query=True, ast=True),
-                endFrame=cmds.playbackOptions(query=True, aet=True)),
-            "uvWrite": "",  # Value-less flag
-        }
-
-        options.update(dict(("root", mesh) for mesh in instance))
-
-        # Generate MEL command
-        mel_args = list()
-        for key, value in options.items():
-            mel_args.append("-{0} {1}".format(key, value))
-
-        mel_args_string = " ".join(mel_args)
-        mel_cmd = "AbcExport -j \"{0}\"".format(mel_args_string)
+        filename = "%s.abc" % instance
 
-        self.log.debug("Running MEL command: \"%s\"" % mel_cmd)
-        mel.eval(mel_cmd)
+        export_alembic(
+            file=os.path.join(dirname, filename).replace("\\", "/"),
+            frame_range=(cmds.playbackOptions(query=True, ast=True),
+                         cmds.playbackOptions(query=True, aet=True)),
+            uv_write=True
+        )
 
         # Store reference for integration
         instance.data["privateDir"] = dirname
diff --git a/pyblish_starter/plugins/extract_model.py b/pyblish_starter/plugins/extract_model.py
index e240bac..704b9d2 100644
--- a/pyblish_starter/plugins/extract_model.py
+++ b/pyblish_starter/plugins/extract_model.py
@@ -1,4 +1,5 @@
 from pyblish import api
+import pyblish_starter as starter
 
 
 class ExtractStarterModel(api.InstancePlugin):
@@ -17,21 +18,20 @@ class ExtractStarterModel(api.InstancePlugin):
 
     def process(self, instance):
         import os
-        import datetime
-
         from maya import cmds
         from pyblish_maya import maintained_selection
 
-        root = instance.context.data["workspaceDir"]
-        time = datetime.datetime.now().strftime("%Y-%m-%dT%H-%M-%SZ")
-        dirname = os.path.join(root, "private", time, str(instance))
-        filename = "%s.ma" % instance
+        dirname = starter.format_private_dir(
+            root=instance.context.data["workspaceDir"],
+            name=instance.data["name"])
 
         try:
             os.makedirs(dirname)
         except OSError:
             pass
 
+        filename = "%s.ma" % instance
+
         path = os.path.join(dirname, filename)
 
         # Perform extraction
diff --git a/pyblish_starter/plugins/extract_rig.py b/pyblish_starter/plugins/extract_rig.py
index accc1b1..f107040 100644
--- a/pyblish_starter/plugins/extract_rig.py
+++ b/pyblish_starter/plugins/extract_rig.py
@@ -1,4 +1,5 @@
 from pyblish import api
+import pyblish_starter as starter
 
 
 class ExtractStarterRig(api.InstancePlugin):
@@ -20,21 +21,21 @@ class ExtractStarterRig(api.InstancePlugin):
 
     def process(self, instance):
         import os
-        import datetime
 
         from maya import cmds
         from pyblish_maya import maintained_selection
 
-        root = instance.context.data["workspaceDir"]
-        time = datetime.datetime.now().strftime("%Y-%m-%dT%H-%M-%SZ")
-        dirname = os.path.join(root, "private", time, str(instance))
-        filename = "%s.ma" % instance
+        dirname = starter.format_private_dir(
+            root=instance.context.data["workspaceDir"],
+            name=instance.data["name"])
 
         try:
             os.makedirs(dirname)
         except OSError:
             pass
 
+        filename = "%s.ma" % instance
+
         path = os.path.join(dirname, filename)
 
         # Perform extraction
diff --git a/pyblish_starter/plugins/integrate_asset.py b/pyblish_starter/plugins/integrate_asset.py
index fb3a202..4c2d1c5 100644
--- a/pyblish_starter/plugins/integrate_asset.py
+++ b/pyblish_starter/plugins/integrate_asset.py
@@ -2,6 +2,13 @@ from pyblish import api
 
 
 class IntegrateStarterAsset(api.InstancePlugin):
+    """Publicise each instance
+
+    Limitations:
+        - Limited to publishing within a single Maya project
+
+    """
+
     label = "Integrate asset"
     order = api.IntegratorOrder
 
-- 
1.7.1

